// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
var e,t;e=this,t=function(){"use strict";var e="function"==typeof Object.defineProperty?Object.defineProperty:null,t=Object.defineProperty,r=Object.prototype,n=r.toString,o=r.__defineGetter__,i=r.__defineSetter__,u=r.__lookupGetter__,f=r.__lookupSetter__,l=function(){try{return e({},"x",{}),!0}catch(e){return!1}}()?t:function(e,t,l){var c,a,y,p;if("object"!=typeof e||null===e||"[object Array]"===n.call(e))throw new TypeError("invalid argument. First argument must be an object. Value: `"+e+"`.");if("object"!=typeof l||null===l||"[object Array]"===n.call(l))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+l+"`.");if((a="value"in l)&&(u.call(e,t)||f.call(e,t)?(c=e.__proto__,e.__proto__=r,delete e[t],e[t]=l.value,e.__proto__=c):e[t]=l.value),y="get"in l,p="set"in l,a&&(y||p))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return y&&o&&o.call(e,t,l.get),p&&i&&i.call(e,t,l.set),e};function c(e,t,r){l(e,t,{configurable:!1,enumerable:!1,writable:!1,value:r})}function a(e){return"number"==typeof e}var y="function"==typeof Symbol&&"symbol"==typeof Symbol("foo");function p(){return y&&"symbol"==typeof Symbol.toStringTag}var b=Object.prototype.toString,s=Object.prototype.hasOwnProperty,m="function"==typeof Symbol?Symbol.toStringTag:"",_=p()?function(e){var t,r,n,o,i;if(null==e)return b.call(e);r=e[m],i=m,t=null!=(o=e)&&s.call(o,i);try{e[m]=void 0}catch(t){return b.call(e)}return n=b.call(e),t?e[m]=r:delete e[m],n}:function(e){return b.call(e)},d=Number,v=d.prototype.toString,g=p();function h(e){return"object"==typeof e&&(e instanceof d||(g?function(e){try{return v.call(e),!0}catch(e){return!1}}(e):"[object Number]"===_(e)))}function j(e){return a(e)||h(e)}c(j,"isPrimitive",a),c(j,"isObject",h);var w=Number.POSITIVE_INFINITY,O=d.NEGATIVE_INFINITY,S=Math.floor;function A(e){return S(e)===e}function F(e){return e<w&&e>O&&A(e)}function T(e){return a(e)&&F(e)}function I(e){return h(e)&&F(e.valueOf())}function N(e){return T(e)||I(e)}function E(e){return T(e)&&e>0}function P(e){return I(e)&&e.valueOf()>0}function k(e){return E(e)||P(e)}function x(e){return"object"==typeof e&&null!==e&&"number"==typeof e.length&&A(e.length)&&e.length>=0&&e.length<=4294967295}function V(e){return 0===e&&1/e===w}function C(e){return 0===e&&1/e===O}function G(e){return e!=e}c(N,"isPrimitive",T),c(N,"isObject",I),c(k,"isPrimitive",E),c(k,"isObject",P);var Y="function"==typeof Float64Array,D="function"==typeof Float64Array?Float64Array:null,M="function"==typeof Float64Array?Float64Array:void 0,R=function(){var e,t,r;if("function"!=typeof D)return!1;try{t=new D([1,3.14,-3.14,NaN]),r=t,e=(Y&&r instanceof Float64Array||"[object Float64Array]"===_(r))&&1===t[0]&&3.14===t[1]&&-3.14===t[2]&&t[3]!=t[3]}catch(t){e=!1}return e}()?M:function(){throw new Error("not implemented")};function U(){var e,t=arguments,r=t[0],n="https://stdlib.io/e/"+r+"?";for(e=1;e<t.length;e++)n+="&arg[]="+encodeURIComponent(t[e]);return n}return function(e,t){var r,n,o,i,u,f,l;if(1===arguments.length)r=[0,0],u=e;else{if(!x(e))throw new TypeError(U("0eFAC",e));r=e,u=t}if(!E(u))throw new TypeError(U("0eFAD",u));return n=new R(u),o=w,i=O,l=-1,f=0,c;function c(e){var t,c,a;if(0===arguments.length)return 0===f?null:r;if(l=(l+1)%u,G(e))f=u,o=e,i=e;else if(f<u)f+=1,(e<o||e===o&&C(e))&&(o=e),(e>i||e===i&&V(e))&&(i=e);else if(n[l]===o&&e>o||n[l]===i&&e<i||G(n[l])){for(o=e,i=e,a=0;a<u;a++)if(a!==l){if(G(c=n[a])){o=c,i=c;break}(c<o||c===o&&C(c))&&(o=c),(c>i||c===i&&V(c))&&(i=c)}}else if(e<o)o=e;else if(e>i)i=e;else if(0===e){if(t=C(e),e===o)if(n[l]===o&&C(n[l])&&!1===t){for(o=e,a=0;a<u;a++)if(a!==l&&C(n[a])){o=n[a];break}}else t&&(o=e);if(e===i)if(n[l]===i&&V(n[l])&&t){for(i=e,a=0;a<u;a++)if(a!==l&&V(n[a])){i=n[a];break}}else!1===t&&(i=e)}return n[l]=e,r[0]=o,r[1]=i,r}}},"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).incrmminmax=t();
//# sourceMappingURL=index.js.map
